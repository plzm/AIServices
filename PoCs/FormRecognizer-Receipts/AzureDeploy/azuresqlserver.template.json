{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"displayName": "Azure region",
				"description": "The Azure region within which to deploy. Examples: 'eastus', 'eastus2', and so on. See https://azure.microsoft.com/regions/."
			}
		},
		"server_name": {
			"type": "string",
			"metadata": {
				"displayName": "Azure SQL server name",
				"description": "Azure SQL server name"
			}
		},
		"server_admin_username": {
			"type": "string",
			"metadata": {
				"displayName": "Azure SQL server admin username",
				"description": "Azure SQL server admin username"
			}
		},
		"server_admin_password": {
			"type": "securestring",
			"metadata": {
				"displayName": "Azure SQL server admin password",
				"description": "Azure SQL server admin password"
			}
		},
		"alerts_email_address": {
			"type": "string",
			"defaultValue": "paelaz@microsoft.com",
			"metadata": {
				"description": "Email address for receiving database alerts"
			}
		},
		"audit_storage_account_name": {
			"type": "string",
			"metadata": {
				"description": "Storage account name where audit logs will be stored"
			}
		},
		"audit_storage_account_key": {
			"type": "securestring",
			"metadata": {
				"description": "Storage account key where audit logs will be stored"
			}
		},
		"firewall_rule_start_ip": {
			"type": "string",
			"metadata": {
				"description": "Start IP address for inbound server firewall rule"
			}
		},
		"firewall_rule_end_ip": {
			"type": "string",
			"metadata": {
				"description": "End IP address for inbound server firewall rule"
			}
		}
	},
	"variables": {
		"api_version_sql": "2018-06-01-preview",
		"api_version_advisors": "2014-04-01",
		"api_version_auditing": "2017-03-01-preview",
		"api_version_firewall": "2015-05-01-preview",
		"api_version_security_alert": "2017-03-01-preview",
		"api_version_vuln_assmt": "2018-06-01-preview",
		"api_version_storage": "2019-04-01",
		"server_resource_id": "[resourceId('Microsoft.Sql/servers/', parameters('server_name'))]"
	},
	"resources": [
		{
			"name": "[parameters('server_name')]",
			"type": "Microsoft.Sql/servers",
			"apiVersion": "[variables('api_version_sql')]",
			"location": "[parameters('location')]",
			"identity": {
				"type": "SystemAssigned"
			},
			"tags": {
				"Purpose": "PoC"
			},
			"properties": {
				"administratorLogin": "[parameters('server_admin_username')]",
				"administratorLoginPassword": "[parameters('server_admin_password')]"
			},
			"resources": [
				{
					"type": "Microsoft.Sql/servers/advisors",
					"apiVersion": "[variables('api_version_advisors')]",
					"name": "[concat(parameters('server_name'), '/CreateIndex')]",
					"properties": {
						"autoExecuteValue": "Enabled"
					},
					"dependsOn": [
						"[variables('server_resource_id')]"
					]
				},
				{
					"type": "Microsoft.Sql/servers/advisors",
					"apiVersion": "[variables('api_version_advisors')]",
					"name": "[concat(parameters('server_name'), '/DropIndex')]",
					"properties": {
						"autoExecuteValue": "Enabled"
					},
					"dependsOn": [
						"[variables('server_resource_id')]",
						"[resourceId('Microsoft.Sql/servers/advisors', parameters('server_name'), 'CreateIndex')]"
					]
				},
				{
					"type": "Microsoft.Sql/servers/advisors",
					"apiVersion": "[variables('api_version_advisors')]",
					"name": "[concat(parameters('server_name'), '/ForceLastGoodPlan')]",
					"properties": {
						"autoExecuteValue": "Enabled"
					},
					"dependsOn": [
						"[variables('server_resource_id')]",
						"[resourceId('Microsoft.Sql/servers/advisors', parameters('server_name'), 'DropIndex')]"
					]
				},
				{
					"name": "[concat(parameters('server_name'), '-auditing')]",
					"type": "auditingSettings",
					"apiVersion": "[variables('api_version_auditing')]",
					"properties": {
						"state": "Enabled",
						"storageEndpoint": "[concat('https://', parameters('audit_storage_account_name'), '.blob.core.windows.net')]",
						"storageAccountAccessKey": "[parameters('audit_storage_account_key')]",
						"retentionDays": 0,
						"auditActionsAndGroups": [
							"BATCH_COMPLETED_GROUP",
							"SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
							"FAILED_DATABASE_AUTHENTICATION_GROUP"
						],
						"isStorageSecondaryKeyInUse": false,
						"isAzureMonitorTargetEnabled": false
					},
					"dependsOn": [
						"[variables('server_resource_id')]"
					]
				},
				{
					"name": "[concat(parameters('server_name'), '-allow-azure-ips')]",
					"type": "firewallRules",
					"apiVersion": "[variables('api_version_firewall')]",
					"location": "[parameters('location')]",
					"properties": {
						"startIpAddress": "0.0.0.0",
						"endIpAddress": "0.0.0.0"
					},
					"dependsOn": [
						"[variables('server_resource_id')]"
					]
				},  
				{
					"name": "[concat(parameters('server_name'), '-allowed-external-ips')]",
					"type": "firewallRules",
					"apiVersion": "[variables('api_version_firewall')]",
					"properties": {
						"startIpAddress": "[parameters('firewall_rule_start_ip')]",
						"endIpAddress": "[parameters('firewall_rule_end_ip')]"
					},
					"dependsOn": [
						"[variables('server_resource_id')]"
					]
				},
				{
					"name": "[concat(parameters('server_name'), '-security-alert')]",
					"type": "securityAlertPolicies",
					"apiVersion": "[variables('api_version_security_alert')]",
					"properties": {
						"state": "Enabled",
						"emailAddresses": [
							"[parameters('alerts_email_address')]"
						],
						"emailAccountAdmins": true,
						"storageEndpoint": "[concat('https://', parameters('audit_storage_account_name'), '.blob.core.windows.net')]",
						"storageAccountAccessKey": "[parameters('audit_storage_account_key')]",
						"retentionDays": "0"
					},
					"dependsOn": [
						"[variables('server_resource_id')]"
					]
				},
				{
					"name": "[concat(parameters('server_name'), '-vuln-assmt')]",
					"type": "vulnerabilityAssessments",
					"apiVersion": "[variables('api_version_vuln_assmt')]",
					"properties": {
						"storageContainerPath": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('audit_storage_account_name')), variables('api_version_storage')).primaryEndpoints.blob, parameters('server_name'), '-vuln-assmt')]",
						"storageAccountAccessKey": "[parameters('audit_storage_account_key')]",
						"recurringScans": {
							"isEnabled": true,
							"emailSubscriptionAdmins": true
						}
					},
					"dependsOn": [
						"[variables('server_resource_id')]"
					]
				}
			]
		}
	],
	"outputs": {
		"server_fqdn": {
			"type": "string",
			"value": "[reference(parameters('server_name')).fullyQualifiedDomainName]"
		}
	}
}